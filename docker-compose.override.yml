version: '3.5'
services:
    api-server:
        volumes:
            - ./plus:/app
        
        
        # specified in tiangolo/uvicorn-gunicorn-fastapi:python3.7
        command: /start-reload.sh

        ports:
          - 8888:8888
    
        labels:
          - traefik.enable=true
          - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
          
          # TODO: make use of this tag
          #- traefik.http.routers.api-server.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
  
    pgadmin:
      ports:
        - "5050:5050"

    traefik:
      ports:
        - "80:80"
        - "8090:8080"
      command:
        # Enable Docker in Traefik, so that it reads labels from Docker services
        - --providers.docker
        # Add a constraint to only use services with the label for this stack
        # from the env var TRAEFIK_TAG
        - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
        # Do not expose all Docker services, only the ones explicitly exposed
        - --providers.docker.exposedbydefault=false
        # Disable Docker Swarm mode for local development
        # - --providers.docker.swarmmode
        # Enable the access log, with HTTP requests
        - --accesslog
        # Enable the Traefik log, for configurations and errors
        - --log
        # Enable the Dashboard and API
        - --api
        # Enable the Dashboard and API in insecure mode for local development
        - --api.insecure=true
      labels:
        - traefik.enable=true
        - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.services.${STACK_NAME?Variable not set}-traefik-public.loadbalancer.server.port=80
